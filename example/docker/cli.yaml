app: docker
run:
  help: Docker is an example of an app that has many nested subcommands.
  subcommands:
    container:
      help: Manage containers
      subcommands:
        ls:
          help: List containers
          args:
           - null
          flags:
            all:
              help: Show all containers (default shows just running containers)
              default: false
            filter:
              help: Filter output based on conditions provided
              default: ""
            format:
              help: Pretty-print container using a Go template
              default: ""
            last:
              help: Show n last created containers (incluides all states)
              default: -1
            no-trunc:
              help: Don't truncate output
              default: false
            quiet:
              help: Only display containers IDs
              default: false
            size:
              help: Display total file sizes
              default: false
        rm:
          help: Remove one or more containers
          args:
            - container: The container to remove
          vargs: true
          flags:
            force:
              help: Force the removal of a running container (uses SIGKILL)
              default: false
            link:
              help: Remove the specified link
              default: false
            volumes:
              help: Remove anonymous volumes associated with the container
              default: false
        start:
          help: Start one or more stopped containers
          args:
            - container: The container to start
          vargs: true
          flags:
            attach:
              help: Attach STDOUT/STDERR and forward signals
              default: false
            detach-keys:
              help: Override the key sequence for detaching a conatiner
              default: ""
            interactive:
              help: Attach container's STDIN
              default: false
    volume:
      help: Manage volumes
      subcommands:
        ls:
          help: List volumes
          flags:
            filter:
              help: Provide filter valies (e.g. 'dangling=true')
              default: ""
            format:
              help: Pretty-print volumes using a Go template
              default: ""
            quiet:
              help: Only display volume names
              default: false
        rm:
          help: Remove one or more volumes. You cannot remove a volume that is
                in user by a container.
          args:
            - volume: The volume to remove
          vargs: true
          flags:
            force:
              help: Force the removal of one or more volumes
              default: false
    network:
      help: Manage networks
      subcommands:
        inspect:
          help: Display detailed information on one or more networks
          args:
            - network: The network to inspect
          vargs: true
          flags:
            format:
              help: Format the output using the given Go template
              default: ""
            verbose:
              help: Verbose output for diagnostics
              default: false

